/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vistas;
import Modelos.Usuario;
import Controladores.ControladorVentanaHistoriaPyD;
import Modelos.Libro;
import Modelos.PrestamoLibro;
import java.time.LocalDate;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author cduar
 */
public class VentanaHistoriaPyD extends javax.swing.JFrame {
    private Usuario usuario;
    private ControladorVentanaHistoriaPyD controlador;
    DefaultTableModel modelo;
    /**
     * Creates new form VentanaHistoriaPyD
     */
    public VentanaHistoriaPyD(Usuario usuario) {
        initComponents();
        this.usuario = usuario;
        this.controlador = new ControladorVentanaHistoriaPyD();
        modelo=(DefaultTableModel)tablaHistorial.getModel();
        actualizarTabla(usuario.getCedula());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaHistorial = new javax.swing.JTable();
        btVolver = new javax.swing.JButton();
        cboFiltro = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        cboFiltro2 = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tablaHistorial.setBackground(new java.awt.Color(255, 255, 255));
        tablaHistorial.setForeground(new java.awt.Color(127, 85, 57));
        tablaHistorial.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Id Prestamo", "Codido Libro", "Nombre del Libro", "Fecha Prestamo", "Fecha Vencimiento", "Fecha DevoluciÃ³n"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaHistorial.setSelectionBackground(new java.awt.Color(127, 85, 57));
        tablaHistorial.setSelectionForeground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setViewportView(tablaHistorial);
        if (tablaHistorial.getColumnModel().getColumnCount() > 0) {
            tablaHistorial.getColumnModel().getColumn(0).setResizable(false);
            tablaHistorial.getColumnModel().getColumn(0).setPreferredWidth(40);
            tablaHistorial.getColumnModel().getColumn(1).setResizable(false);
            tablaHistorial.getColumnModel().getColumn(1).setPreferredWidth(50);
            tablaHistorial.getColumnModel().getColumn(2).setResizable(false);
            tablaHistorial.getColumnModel().getColumn(3).setResizable(false);
            tablaHistorial.getColumnModel().getColumn(4).setResizable(false);
            tablaHistorial.getColumnModel().getColumn(5).setResizable(false);
            tablaHistorial.getColumnModel().getColumn(5).setPreferredWidth(50);
        }

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 681, 217));

        btVolver.setBackground(new java.awt.Color(127, 85, 57));
        btVolver.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btVolver.setForeground(new java.awt.Color(255, 255, 255));
        btVolver.setText("Volver");
        btVolver.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btVolverActionPerformed(evt);
            }
        });
        jPanel1.add(btVolver, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 340, -1, -1));

        cboFiltro.setBackground(new java.awt.Color(127, 85, 57));
        cboFiltro.setForeground(new java.awt.Color(255, 255, 255));
        cboFiltro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-Seleccionar-", "En Prestamo", "Entregado" }));
        cboFiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboFiltroActionPerformed(evt);
            }
        });
        jPanel1.add(cboFiltro, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 50, 129, -1));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(127, 85, 57));
        jLabel1.setText("Filtro Usuario:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 50, -1, -1));

        cboFiltro2.setBackground(new java.awt.Color(127, 85, 57));
        cboFiltro2.setForeground(new java.awt.Color(255, 255, 255));
        cboFiltro2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboFiltro2ActionPerformed(evt);
            }
        });
        jPanel1.add(cboFiltro2, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 50, 129, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(127, 85, 57));
        jLabel2.setText("Filtro Estado:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 50, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 709, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 383, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btVolverActionPerformed
        VentanaUsuario x = new VentanaUsuario(usuario);
        x.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btVolverActionPerformed

    private void cboFiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboFiltroActionPerformed
        Object selectedItem = cboFiltro.getSelectedItem();
        if(selectedItem.toString().equals("-Seleccionar-")){
            actualizarTabla(usuario.getCedula());
        }else if(selectedItem.toString().equals("En Prestamo")){
            actualizarTablaEnPrestamo(usuario.getCedula());   
        }else if(selectedItem.toString().equals("Entregado")){
          actualizarTablaEntregado(usuario.getCedula());  
        }
    }//GEN-LAST:event_cboFiltroActionPerformed

    private void cboFiltro2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboFiltro2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboFiltro2ActionPerformed

 
    
    public void actualizarTabla(int cedula){
       
        boorarTabla();
        try{
            ArrayList<PrestamoLibro> listaPrestamos = controlador.traerPrestamos(cedula);
            for (int i = 0; i < listaPrestamos.size(); i++) {
                PrestamoLibro aux = listaPrestamos.get(i);
                LocalDate x = aux.getFecha_devolucion();
                
                Libro libro = controlador.buscarLibro(aux.getCodigo_libro());
                
                if(x == null){
                    String fecha_devolucion = "En prestamo";
                    Object[] ob = {aux.getId_prestamo() , aux.getCodigo_libro() , libro.getTitulo() , aux.getFecha_prestamo(),aux.getFecha_vencimiento() , fecha_devolucion};
                    modelo.addRow(ob);
                    
                }else{
                    Object[] ob = {aux.getId_prestamo() , aux.getCodigo_libro() , libro.getTitulo() , aux.getFecha_prestamo(),aux.getFecha_vencimiento() , aux.getFecha_devolucion()};
                    modelo.addRow(ob);
                    
                }
            }

            }catch(Exception ex){
                System.err.println(ex.toString());
            }
    }
    
    public void actualizarTablaEnPrestamo(int cedula){
       
        boorarTabla();
        try{
            ArrayList<PrestamoLibro> listaPrestamos = controlador.traerPrestamos(cedula);
            for (int i = 0; i < listaPrestamos.size(); i++) {
                PrestamoLibro aux = listaPrestamos.get(i);
                
                Libro libro = controlador.buscarLibro(aux.getCodigo_libro());
                
                if(aux.getFecha_devolucion() == null){
                    
                    String fecha_devolucion = "En prestamo";
                    Object[] ob = {aux.getId_prestamo() , aux.getCodigo_libro() , libro.getTitulo() , aux.getFecha_prestamo(),aux.getFecha_vencimiento() , fecha_devolucion};
                    modelo.addRow(ob);
                }
            }

            }catch(Exception ex){
                System.err.println(ex.toString());
            }
    }
    public void actualizarTablaEntregado(int cedula){
       
        boorarTabla();
        try{
            ArrayList<PrestamoLibro> listaPrestamos = controlador.traerPrestamos(cedula);
            for (int i = 0; i < listaPrestamos.size(); i++) {
                PrestamoLibro aux = listaPrestamos.get(i);
                
                Libro libro = controlador.buscarLibro(aux.getCodigo_libro());
                
                if(aux.getFecha_devolucion() != null){ 
                
                    Object[] ob = {aux.getId_prestamo() , aux.getCodigo_libro() , libro.getTitulo() , aux.getFecha_prestamo(),aux.getFecha_vencimiento() , aux.getFecha_devolucion()};
                    modelo.addRow(ob);
                    
                }
            }

            }catch(Exception ex){
                System.err.println(ex.toString());
            }
    }
    
    public void boorarTabla(){
        try{
            for (int i = 0; i < 5 ; i++) {
                for (int j = 0; j < modelo.getRowCount(); j++) {
                    modelo.removeRow(j);
                }
            }
        }catch(NullPointerException e){
        }
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btVolver;
    private javax.swing.JComboBox<String> cboFiltro;
    private javax.swing.JComboBox<String> cboFiltro2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaHistorial;
    // End of variables declaration//GEN-END:variables
}
